import React from "react";
import exempleComp from "../assets/exemple-Comp.png";
import { useEffect } from "react";

const DiagComposants = () => {

  useEffect(() => {
    // üëáÔ∏è scroll to top on page load
    window.scrollTo({top: 0, left: 0, behavior: 'smooth'});
  }, []);

  
  return (
    <div className="w-80 m-auto">
      <div className="m-auto mt-100">
        <h1 className="text-center mt-10">Diagramme de composants</h1>
        <div className="mt-10 desktop">
          <img
            className="img-diag mt-100"
            src={exempleComp}
            alt="exemple_Diag_Activite"
          />
          <p className="mt-10 mt-100 text-info">
            Un diagramme de composants a pour objectif d'illustrer la relation
            entre les diff√©rents composants d'un syst√®me. Dans le cadre de l'UML
            2.0, le terme ¬´ composant ¬ª fait r√©f√©rence √† un module de classes
            qui repr√©sentent des syst√®mes ou des sous-syst√®mes ind√©pendants
            ayant la capacit√© de s'interfacer avec le reste du syst√®me.
          </p>
          <p className="mt-10 text-info">
            Dans UML, les diagrammes de composants repr√©sentent la structure du
            syst√®me logiciel, qui d√©crit les composants du logiciel, leurs
            interfaces et leurs d√©pendances. Vous pouvez utiliser des diagrammes
            de composants pour mod√©liser des syst√®mes logiciels √† un haut niveau
            ou pour afficher des composants √† un niveau inf√©rieur, au niveau du
            package. Ce type de diagramme prend en charge le d√©veloppement √†
            base de composants, dans lequel un syst√®me logiciel est divis√© en
            composants et interfaces qui sont r√©utilisables et rempla√ßables.
          </p>
          <h4 className="mt-50 titre">Comment dessiner un diagramme de composants :</h4>
          <p className="text-info mt-50">
             <br />
            <br />
            Vous pouvez utiliser un diagramme de composants lorsque vous voulez
            repr√©senter votre syst√®me en tant que composants et que vous voulez
            montrer leurs interrelations par le biais d‚Äôinterfaces. Il vous aide
            √† vous faire une id√©e de la mise en ≈ìuvre du syst√®me. Voici les
            √©tapes que vous pouvez suivre pour dessiner un sch√©ma de composants.
            <br />
            <br /> √âtape 1 : d√©terminer l‚Äôobjectif du diagramme et identifier
            les artefacts tels que les fichiers, documents, etc. de votre
            syst√®me ou application que vous devez repr√©senter dans votre
            diagramme.
            <br />
            <br /> √âtape 2 : Au fur et √† mesure que vous √©tablissez les
            relations entre les √©l√©ments que vous avez identifi√©s pr√©c√©demment,
            cr√©ez une disposition mentale de votre diagramme de composants.
            <br />
            <br /> √âtape 3 : Au fur et √† mesure que vous dessinez le diagramme,
            ajoutez d‚Äôabord les composants, en les regroupant dans d‚Äôautres
            composants comme vous le souhaitez.
            <br />
            <br /> √âtape 4 : L‚Äô√©tape suivante consiste √† ajouter d‚Äôautres
            √©l√©ments tels que des interfaces, des classes, des objets, des
            d√©pendances, etc. √† votre diagramme de composants et √† le compl√©ter.
            <br />
            <br /> √âtape 5 : Vous pouvez joindre des notes sur les diff√©rentes
            parties de votre diagramme de composants pour clarifier certains
            d√©tails √† d‚Äôautres.
          </p>
        </div>
      </div>
    </div>
  );
};

export default DiagComposants;
